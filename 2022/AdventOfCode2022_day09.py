
# READ DATA
INPUT = open('09.txt', 'r')
INPUT = [x.strip() for x in INPUT.readlines()]
INPUT = [[el[0], int(el[1])] for el in (x.split(' ') for x in INPUT)]

TEST = [['R', 4],['U', 4],['L', 3],['D', 1],['R', 4],['D', 1],['L', 5],['R', 2]]
TEST2 = [['R', 5],['U', 8],['L', 8],['D', 3],['R', 17],['D', 10],['L', 25],['U', 20]]

# DAY 9 PUZZLE 1
movements = INPUT
H = [0, 0]
T = [0, 0]

positions_visited_by_T = []

# x positive to right
# y positive to up

for m in movements:
    for m1 in range(m[1]):

        if m[0] == 'U': H[1] += 1
        if m[0] == 'D': H[1] -= 1
        if m[0] == 'R': H[0] += 1
        if m[0] == 'L': H[0] -= 1

        if T[0] == H[0] + 2:  T = [H[0] + 1, H[1]]
        if T[0] == H[0] - 2:  T = [H[0] - 1, H[1]]
        if T[1] == H[1] + 2:  T = [H[0], H[1] + 1]
        if T[1] == H[1] - 2:  T = [H[0], H[1] - 1]

        positions_visited_by_T.append([*T])

positions_visited_by_T = [str(el) for el in positions_visited_by_T]
unique_positions_visited_by_T = list(set(positions_visited_by_T))
res1 = len(unique_positions_visited_by_T)

print('DAY 9 PUZZLE 1: %d' % (res1))

# DAY 9 PUZZLE 2
movements = INPUT
H = [0, 0]
R1 = [0, 0]
R2 = [0, 0]
R3 = [0, 0]
R4 = [0, 0]
R5 = [0, 0]
R6 = [0, 0]
R7 = [0, 0]
R8 = [0, 0]
R9 = [0, 0]

positions_visited_by_R9 = []

# x positive to right
# y positive to up

for m in movements:
    for m1 in range(m[1]):

        if m[0] == 'U': H[1] += 1
        if m[0] == 'D': H[1] -= 1
        if m[0] == 'R': H[0] += 1
        if m[0] == 'L': H[0] -= 1

        if R1[0] == H[0] + 2:  R1 = [H[0] + 1, H[1]]
        if R1[0] == H[0] - 2:  R1 = [H[0] - 1, H[1]]
        if R1[1] == H[1] + 2:  R1 = [H[0], H[1] + 1]
        if R1[1] == H[1] - 2:  R1 = [H[0], H[1] - 1]

        if R2 == [R1[0]+2, R1[1]]:    R2 = [R1[0]+1, R1[1]]
        if R2 == [R1[0]+2, R1[1]+1]:  R2 = [R1[0]+1, R1[1]]
        if R2 == [R1[0]+2, R1[1]-1]:  R2 = [R1[0]+1, R1[1]]
        if R2 == [R1[0]-2, R1[1]]:    R2 = [R1[0]-1, R1[1]]
        if R2 == [R1[0]-2, R1[1]+1]:  R2 = [R1[0]-1, R1[1]]
        if R2 == [R1[0]-2, R1[1]-1]:  R2 = [R1[0]-1, R1[1]]
        if R2 == [R1[0], R1[1]+2]:    R2 = [R1[0], R1[1]+1]
        if R2 == [R1[0]+1, R1[1]+2]:  R2 = [R1[0], R1[1]+1]
        if R2 == [R1[0]-1, R1[1]+2]:  R2 = [R1[0], R1[1]+1]
        if R2 == [R1[0], R1[1]-2]:    R2 = [R1[0], R1[1]-1]
        if R2 == [R1[0]+1, R1[1]-2]:  R2 = [R1[0], R1[1]-1]
        if R2 == [R1[0]-1, R1[1]-2]:  R2 = [R1[0], R1[1]-1]
        if R2 == [R1[0]+2, R1[1]+2]:  R2 = [R1[0]+1, R1[1]+1]
        if R2 == [R1[0]+2, R1[1]-2]:  R2 = [R1[0]+1, R1[1]-1]
        if R2 == [R1[0]-2, R1[1]+2]:  R2 = [R1[0]-1, R1[1]+1]
        if R2 == [R1[0]-2, R1[1]-2]:  R2 = [R1[0]-1, R1[1]-1]

        if R3 == [R2[0]+2, R2[1]]:    R3 = [R2[0]+1, R2[1]]
        if R3 == [R2[0]+2, R2[1]+1]:  R3 = [R2[0]+1, R2[1]]
        if R3 == [R2[0]+2, R2[1]-1]:  R3 = [R2[0]+1, R2[1]]
        if R3 == [R2[0]-2, R2[1]]:    R3 = [R2[0]-1, R2[1]]
        if R3 == [R2[0]-2, R2[1]+1]:  R3 = [R2[0]-1, R2[1]]
        if R3 == [R2[0]-2, R2[1]-1]:  R3 = [R2[0]-1, R2[1]]
        if R3 == [R2[0], R2[1]+2]:    R3 = [R2[0], R2[1]+1]
        if R3 == [R2[0]+1, R2[1]+2]:  R3 = [R2[0], R2[1]+1]
        if R3 == [R2[0]-1, R2[1]+2]:  R3 = [R2[0], R2[1]+1]
        if R3 == [R2[0], R2[1]-2]:    R3 = [R2[0], R2[1]-1]
        if R3 == [R2[0]+1, R2[1]-2]:  R3 = [R2[0], R2[1]-1]
        if R3 == [R2[0]-1, R2[1]-2]:  R3 = [R2[0], R2[1]-1]
        if R3 == [R2[0]+2, R2[1]+2]:  R3 = [R2[0]+1, R2[1]+1]
        if R3 == [R2[0]+2, R2[1]-2]:  R3 = [R2[0]+1, R2[1]-1]
        if R3 == [R2[0]-2, R2[1]+2]:  R3 = [R2[0]-1, R2[1]+1]
        if R3 == [R2[0]-2, R2[1]-2]:  R3 = [R2[0]-1, R2[1]-1]
        
        if R4 == [R3[0]+2, R3[1]]:    R4 = [R3[0]+1, R3[1]]
        if R4 == [R3[0]+2, R3[1]+1]:  R4 = [R3[0]+1, R3[1]]
        if R4 == [R3[0]+2, R3[1]-1]:  R4 = [R3[0]+1, R3[1]]
        if R4 == [R3[0]-2, R3[1]]:    R4 = [R3[0]-1, R3[1]]
        if R4 == [R3[0]-2, R3[1]+1]:  R4 = [R3[0]-1, R3[1]]
        if R4 == [R3[0]-2, R3[1]-1]:  R4 = [R3[0]-1, R3[1]]
        if R4 == [R3[0], R3[1]+2]:    R4 = [R3[0], R3[1]+1]
        if R4 == [R3[0]+1, R3[1]+2]:  R4 = [R3[0], R3[1]+1]
        if R4 == [R3[0]-1, R3[1]+2]:  R4 = [R3[0], R3[1]+1]
        if R4 == [R3[0], R3[1]-2]:    R4 = [R3[0], R3[1]-1]
        if R4 == [R3[0]+1, R3[1]-2]:  R4 = [R3[0], R3[1]-1]
        if R4 == [R3[0]-1, R3[1]-2]:  R4 = [R3[0], R3[1]-1]
        if R4 == [R3[0]+2, R3[1]+2]:  R4 = [R3[0]+1, R3[1]+1]
        if R4 == [R3[0]+2, R3[1]-2]:  R4 = [R3[0]+1, R3[1]-1]
        if R4 == [R3[0]-2, R3[1]+2]:  R4 = [R3[0]-1, R3[1]+1]
        if R4 == [R3[0]-2, R3[1]-2]:  R4 = [R3[0]-1, R3[1]-1]
        
        if R5 == [R4[0]+2, R4[1]]:    R5 = [R4[0]+1, R4[1]]
        if R5 == [R4[0]+2, R4[1]+1]:  R5 = [R4[0]+1, R4[1]]
        if R5 == [R4[0]+2, R4[1]-1]:  R5 = [R4[0]+1, R4[1]]
        if R5 == [R4[0]-2, R4[1]]:    R5 = [R4[0]-1, R4[1]]
        if R5 == [R4[0]-2, R4[1]+1]:  R5 = [R4[0]-1, R4[1]]
        if R5 == [R4[0]-2, R4[1]-1]:  R5 = [R4[0]-1, R4[1]]
        if R5 == [R4[0], R4[1]+2]:    R5 = [R4[0], R4[1]+1]
        if R5 == [R4[0]+1, R4[1]+2]:  R5 = [R4[0], R4[1]+1]
        if R5 == [R4[0]-1, R4[1]+2]:  R5 = [R4[0], R4[1]+1]
        if R5 == [R4[0], R4[1]-2]:    R5 = [R4[0], R4[1]-1]
        if R5 == [R4[0]+1, R4[1]-2]:  R5 = [R4[0], R4[1]-1]
        if R5 == [R4[0]-1, R4[1]-2]:  R5 = [R4[0], R4[1]-1]
        if R5 == [R4[0]+2, R4[1]+2]:  R5 = [R4[0]+1, R4[1]+1]
        if R5 == [R4[0]+2, R4[1]-2]:  R5 = [R4[0]+1, R4[1]-1]
        if R5 == [R4[0]-2, R4[1]+2]:  R5 = [R4[0]-1, R4[1]+1]
        if R5 == [R4[0]-2, R4[1]-2]:  R5 = [R4[0]-1, R4[1]-1]
        
        if R6 == [R5[0]+2, R5[1]]:    R6 = [R5[0]+1, R5[1]]
        if R6 == [R5[0]+2, R5[1]+1]:  R6 = [R5[0]+1, R5[1]]
        if R6 == [R5[0]+2, R5[1]-1]:  R6 = [R5[0]+1, R5[1]]
        if R6 == [R5[0]-2, R5[1]]:    R6 = [R5[0]-1, R5[1]]
        if R6 == [R5[0]-2, R5[1]+1]:  R6 = [R5[0]-1, R5[1]]
        if R6 == [R5[0]-2, R5[1]-1]:  R6 = [R5[0]-1, R5[1]]
        if R6 == [R5[0], R5[1]+2]:    R6 = [R5[0], R5[1]+1]
        if R6 == [R5[0]+1, R5[1]+2]:  R6 = [R5[0], R5[1]+1]
        if R6 == [R5[0]-1, R5[1]+2]:  R6 = [R5[0], R5[1]+1]
        if R6 == [R5[0], R5[1]-2]:    R6 = [R5[0], R5[1]-1]
        if R6 == [R5[0]+1, R5[1]-2]:  R6 = [R5[0], R5[1]-1]
        if R6 == [R5[0]-1, R5[1]-2]:  R6 = [R5[0], R5[1]-1]
        if R6 == [R5[0]+2, R5[1]+2]:  R6 = [R5[0]+1, R5[1]+1]
        if R6 == [R5[0]+2, R5[1]-2]:  R6 = [R5[0]+1, R5[1]-1]
        if R6 == [R5[0]-2, R5[1]+2]:  R6 = [R5[0]-1, R5[1]+1]
        if R6 == [R5[0]-2, R5[1]-2]:  R6 = [R5[0]-1, R5[1]-1]
        
        if R7 == [R6[0]+2, R6[1]]:    R7 = [R6[0]+1, R6[1]]
        if R7 == [R6[0]+2, R6[1]+1]:  R7 = [R6[0]+1, R6[1]]
        if R7 == [R6[0]+2, R6[1]-1]:  R7 = [R6[0]+1, R6[1]]
        if R7 == [R6[0]-2, R6[1]]:    R7 = [R6[0]-1, R6[1]]
        if R7 == [R6[0]-2, R6[1]+1]:  R7 = [R6[0]-1, R6[1]]
        if R7 == [R6[0]-2, R6[1]-1]:  R7 = [R6[0]-1, R6[1]]
        if R7 == [R6[0], R6[1]+2]:    R7 = [R6[0], R6[1]+1]
        if R7 == [R6[0]+1, R6[1]+2]:  R7 = [R6[0], R6[1]+1]
        if R7 == [R6[0]-1, R6[1]+2]:  R7 = [R6[0], R6[1]+1]
        if R7 == [R6[0], R6[1]-2]:    R7 = [R6[0], R6[1]-1]
        if R7 == [R6[0]+1, R6[1]-2]:  R7 = [R6[0], R6[1]-1]
        if R7 == [R6[0]-1, R6[1]-2]:  R7 = [R6[0], R6[1]-1]
        if R7 == [R6[0]+2, R6[1]+2]:  R7 = [R6[0]+1, R6[1]+1]
        if R7 == [R6[0]+2, R6[1]-2]:  R7 = [R6[0]+1, R6[1]-1]
        if R7 == [R6[0]-2, R6[1]+2]:  R7 = [R6[0]-1, R6[1]+1]
        if R7 == [R6[0]-2, R6[1]-2]:  R7 = [R6[0]-1, R6[1]-1]
        
        if R8 == [R7[0]+2, R7[1]]:    R8 = [R7[0]+1, R7[1]]
        if R8 == [R7[0]+2, R7[1]+1]:  R8 = [R7[0]+1, R7[1]]
        if R8 == [R7[0]+2, R7[1]-1]:  R8 = [R7[0]+1, R7[1]]
        if R8 == [R7[0]-2, R7[1]]:    R8 = [R7[0]-1, R7[1]]
        if R8 == [R7[0]-2, R7[1]+1]:  R8 = [R7[0]-1, R7[1]]
        if R8 == [R7[0]-2, R7[1]-1]:  R8 = [R7[0]-1, R7[1]]
        if R8 == [R7[0], R7[1]+2]:    R8 = [R7[0], R7[1]+1]
        if R8 == [R7[0]+1, R7[1]+2]:  R8 = [R7[0], R7[1]+1]
        if R8 == [R7[0]-1, R7[1]+2]:  R8 = [R7[0], R7[1]+1]
        if R8 == [R7[0], R7[1]-2]:    R8 = [R7[0], R7[1]-1]
        if R8 == [R7[0]+1, R7[1]-2]:  R8 = [R7[0], R7[1]-1]
        if R8 == [R7[0]-1, R7[1]-2]:  R8 = [R7[0], R7[1]-1]
        if R8 == [R7[0]+2, R7[1]+2]:  R8 = [R7[0]+1, R7[1]+1]
        if R8 == [R7[0]+2, R7[1]-2]:  R8 = [R7[0]+1, R7[1]-1]
        if R8 == [R7[0]-2, R7[1]+2]:  R8 = [R7[0]-1, R7[1]+1]
        if R8 == [R7[0]-2, R7[1]-2]:  R8 = [R7[0]-1, R7[1]-1]
        
        if R9 == [R8[0]+2, R8[1]]:    R9 = [R8[0]+1, R8[1]]
        if R9 == [R8[0]+2, R8[1]+1]:  R9 = [R8[0]+1, R8[1]]
        if R9 == [R8[0]+2, R8[1]-1]:  R9 = [R8[0]+1, R8[1]]
        if R9 == [R8[0]-2, R8[1]]:    R9 = [R8[0]-1, R8[1]]
        if R9 == [R8[0]-2, R8[1]+1]:  R9 = [R8[0]-1, R8[1]]
        if R9 == [R8[0]-2, R8[1]-1]:  R9 = [R8[0]-1, R8[1]]
        if R9 == [R8[0], R8[1]+2]:    R9 = [R8[0], R8[1]+1]
        if R9 == [R8[0]+1, R8[1]+2]:  R9 = [R8[0], R8[1]+1]
        if R9 == [R8[0]-1, R8[1]+2]:  R9 = [R8[0], R8[1]+1]
        if R9 == [R8[0], R8[1]-2]:    R9 = [R8[0], R8[1]-1]
        if R9 == [R8[0]+1, R8[1]-2]:  R9 = [R8[0], R8[1]-1]
        if R9 == [R8[0]-1, R8[1]-2]:  R9 = [R8[0], R8[1]-1]
        if R9 == [R8[0]+2, R8[1]+2]:  R9 = [R8[0]+1, R8[1]+1]
        if R9 == [R8[0]+2, R8[1]-2]:  R9 = [R8[0]+1, R8[1]-1]
        if R9 == [R8[0]-2, R8[1]+2]:  R9 = [R8[0]-1, R8[1]+1]
        if R9 == [R8[0]-2, R8[1]-2]:  R9 = [R8[0]-1, R8[1]-1]
        
        positions_visited_by_R9.append([*R9])

positions_visited_by_R9 = [str(el) for el in positions_visited_by_R9]
unique_positions_visited_by_R9 = list(set(positions_visited_by_R9))
res2 = len(unique_positions_visited_by_R9)

print('DAY 9 PUZZLE 2: %d' % (res2))